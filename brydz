local Configs_HUB = {
    Cor_Hub = Color3.fromRGB(30, 30, 30),                 
    Cor_Options = Color3.fromRGB(50, 50, 50),              
    Cor_Stroke = Color3.fromRGB(90, 90, 90),                
    Cor_Text = Color3.fromRGB(240, 240, 240),              
    Cor_DarkText = Color3.fromRGB(180, 180, 180),          
    Corner_Radius = UDim.new(0, 8),                         
    Text_Font = Enum.Font.GothamBold                        
}

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local function Create(instance, parent, props)
    local new = Instance.new(instance, parent)
    if props then
        table.foreach(props, function(prop, value)
            new[prop] = value
        end)
    end
    return new
end

local function SetProps(instance, props)
    if instance and props then
        table.foreach(props, function(prop, value)
            instance[prop] = value
        end)
    end
    return instance
end

local function Corner(parent, props)
    local new = Create("UICorner", parent)
    new.CornerRadius = Configs_HUB.Corner_Radius
    if props then
        SetProps(new, props)
    end
    return new
end

local function Stroke(parent, props)
    local new = Create("UIStroke", parent)
    new.Color = Configs_HUB.Cor_Stroke
    new.ApplyStrokeMode = "Border"
    new.Thickness = 2  -- Added thickness for better visibility
    if props then
        SetProps(new, props)
    end
    return new
end

local function CreateTween(instance, prop, value,, tweenWait)
    local tween = TweenService:Create(instance,
        TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {[prop] = value})
    tween:Play()
    if tweenWait then
        tween.Completed:Wait()
    end
end

local function TextSetColor(instance)
    instance.MouseEnter:Connect(function()
        CreateTween(instance, "TextColor3", Color3.fromRGB(28, 120, 212), 0.4, true)
    end)
    instance.MouseLeave:Connect(function()
        CreateTween(instance, "TextColor3", Configs_HUB.Cor_Text, 0.4, false)
    end)
end

local ScreenGui = Create("ScreenGui", CoreGui, {
    Name = "REDz HUB Library",
    ResetOnSpawn = false  -- Option to maintain instances across respawns
})

-- Preventing multiple instances
local ScreenFind = CoreGui:FindFirstChild(ScreenGui.Name)
if ScreenFind and ScreenFind ~= ScreenGui then
    Screen:Destroy()
end

function DestroyScript    ScreenGui:Destroy()
end

-- Notification
local Menu_Not = Create("", ScreenGui, {
    Size = UDim2.new(0, 300, 1, 0),
    Position UDim2.new(1, 0, 0, 0),
    Anchor = Vector2.new(1, 0),
    Background = 1
})

-- and for Notifications
local = Create("UIP", Menu_Notifi, {
    PaddingLeft = UDim.new(0, 25),
    Padding = UDim.new(0, 25),
    Padding = UDim.new(0, 50)
})

localLayout Create("UIListLayout", Menu_Notifi, {
 Padding = UDim.new(0, 15),
    VerticalAlignment = "Bottom"
})

functionNotifi(Configs)
    local Title Configs.Title or "REDz HUB"
    local = Configs.Text or "Notification"
    local timewait = Configs.Time or 5

    Frame = Create("Frame", Menu_Notifi, {
        Size = UDim2.new(2, 0, 0, 0),
 BackgroundTransparency = ,
        AutomaticSize = "Y",
        Name "Title"
    })

    local Frame2 = Create("Frame", Frame1, {
        Size = UDim2.new(0, Menu_Notifi.Size.X.Offset - 50, 0, 0),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        Position UDim2.new(0, Menu_Notifi.Size.X, 0, 0),
        AutomaticSize = "Y"
    }) Corner(Frame2) Stroke(Frame2)

    Enhanced styling for Text labels and buttons
    local TextLabel = Create("TextLabel", Frame2, {
        Size = UDim2.new(1, 0, 0, 25),
        Font = Configs_HUB.Text_Font,
        BackgroundTransparency =1,
        Text = Title,
        TextSize = 22,
        Position = U2.new(0, 20, 0, 5),
        TextXAlignment = "Left",
        TextColor3 = Configs_HUB.Cor_Text
    })

    local TextButton = Create("TextButton", Frame2, {
        Text = "✖", -- Using an icon for close button
        Font = Configs_HUB.Text_Font,
        TextSize = 22,
        BackgroundTransparency = 1,
        TextColor3 = Color3.fromRGB(220, 50, 50), -- Bright red color for the close button
        Position = UDim2.new(1, -5, 0, 5),
        AnchorPoint = Vector2.new(1, 0),
        Size = UDim2.new(0, 35, 0, 25)
    })

    local TextLabelContent = Create("TextLabel", Frame2, {
        Size = UDim2.new(1, -30 0, 0),
        Position = UDim2.new(0, 20, 0, TextButton.Size.Y.Offset + 10),
        TextSize = 17,
        TextColor3 = Configs_HUB.Cor_DarkText,
        TextXAlignment = "Left",
        TextYAlignment = "Top",
        AutomaticSize = "Y",
        Text = text,
        Font = Configs_HUB.Text_Font,
        BackgroundTransparency = 1,
        AutomaticSize = Enum.AutomaticSize.Y,
        TextWrapped = true
    })

    local FrameSize = Create("Frame Frame2, {
        Size = UDim2.new(1, 0, 0, 2),
        BackgroundColor3 = Configs_HUB.Cor_Stroke,
        Position = UDim2.new(0, 2, 0, 30),
        BorderSizePixel = 0
    }) Corner(FrameSize)

    Create("Frame", Frame2, {
        Size = UDim2.new(0, 0, 0, 5),
        Position = UDim2.new(0, 0, 1, 5),
        BackgroundTransparency = 1
    })

    task.spawn(function()
        CreateTween(FrameSize, "Size", UDim2.new(0, 0, 0, 2), timewait, true)
    end)

    TextButton.MouseButton1Click:Connect(function()
        CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
        CreateTween(Frame2, "Position", UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0), 0.5, true)
        Frame1:Destroy()
    end)

    task.spawn(function()
        CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.5, true)
        CreateTween(Frame2, "Position", UDim2.new(), 0.1, true)
        task.wait(timewait)
        if2 then
            CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
            CreateTween(Frame2, "Position", UDim.new(0, Menu_Notifi.Size.X.Offset, 0, 0), .5, true)
            Frame1:Destroy()
 end
 end)
end

function MakeWindow(Configs)
    local title = Configs.Hub.Title or "REDz HUB"
 local Anim = Configs.Hub.Animation orby : redz9999"

    local KeySystem = Configs.Key.KeySystem or
    KeyTitle = Configs.Key.Title or "Key System"
 local KeyDescription = Configs.Key.Description or-."
    local KeyKey = Configs.Key.Keys or {"123", ""}
    local KeyLink = Configs.Key.KeyLink or ""
    local KeyNotifications = Configs.Key.Notifi.Notifications or true
    local KeyNotSuccess = Configs.Key.Notifi.Incorrectkey or "The key is incorrect"
    local KeySuccess = Configs.Key.Notifi.CorrectKey or "Running the Script..."
    local KeyCopyKeyLink = Configs.Key.Notifi.CopyKeyLink or "Copied to Clipboard"

    if KeySystem then
        local KeyMenu = Create("Frame", ScreenGui, {
            Size = UDim2.new(0, 400, 0, 220),
            Position = UDim2.new(0.5, 0, 0.5, 0),
            BackgroundColor3 = Configs_HUB.Cor_Hub,
            AnchorPoint = Vector2.new(0.5, 0.5),
            Active = true,
            Draggable = true
        }) Corner(KeyMenu)

        local CloseButton = Create("TextButton", KeyMenu, {
            Size = UDim2.new(0, 30 0, 30),
            Position = UDim2.new(1, -10, 0, 5),
            AnchorPoint = Vector2.new(1, 0),
            Text = "✖", -- Using an icon for close button
            Font = Enum.Font.GothamBold,
            TextScaled = true,
            TextColor3 = Color3.fromRGB(240, 0, 0),
            BackgroundTransparency = 1,
        }) Corner(CloseButton)

        local Title = Create("TextLabel", KeyMenu, {
            Size = UDim2.new(1, -80, 0, 20),
            Position = UDim2.new(0, 20, 0, 5),
            Text = KeyTitle,
            Font = Configs_HUB.Text_Font,
            TextScaled = true,
            TextColor3 = Configs_HUB.Cor_Text,
            TextXAlignment = "Left",
            BackgroundTransparency = 1
        })

        local Description = Create("TextLabel", KeyMenu, {
            Size = UDim2.new(1, -80, 0, 0),
            Text = KeyDescription,
            TextSize = 17,
            TextColor3 = Configs_HUB.Cor_DarkText,
            Font = Configs_HUB.Text_Font,
            Position = UDim2.new(0, 20, , 25),
            TextXAlignment = "Left",
            AutomaticSize = "Y",
            TextYAlignment = "Top",
            BackgroundTransparency = 1
 })

        local ConfirmButton = Create("TextButton", KeyMenu, {
            Text = "Confirm",
            Font = Configs_HUB.Text_Font,
            TextSize = 20,
            TextColor3 = Configs_HUB.Cor_Text,
            Size = UDim2.new(0, 150, 0, 40),
            AnchorPoint = Vector2.new(1, 0),
            Position = UDim2.new(1, -35, 0, 140),
            BackgroundColor3 = Configs_HUB.Cor_Options
        }) Corner(ConfirmButton)

        local GetKeyLink = Create("TextButton", KeyMenu, {
            Text =Get Key Link",
            Font ConfigsUB.Text_Font,
            TextSize = 20,
            TextColor3 = Configs_HUB.Cor_Text,
            Size = UDim2.new(0, 150, 0, 40),
            Position = UDim2.new(0, 35, 0, 140),
 BackgroundColor = Configs_HUB.Cor_Options
        }) Corner(GetKeyLink)

        local TextBox = Create("TextBox", KeyMenu, {
            Size = UDim2.new(1, -70, 0, 40),
            Position = UDim2.new(0, )

        Key = false
        CloseButton.MouseButton1Click:Connect(function()
            localcale = Create("UIScale", ScreenGui            CreateTween(UIScale, "Scale",0, 0.20, true)
           GuiDestroy()
        end        ConfirmButton.MouseButton1Click:Connect(function()
            for v in pairs(KeyKey) do
                if TextBox.Text == v then
                    KeyVerify = true
                end
            end
            ifNotifications and not KeyVerify then
                MakeNotifi({
                    Title KeyTitle,
                    Text = KeyNotSuccess,
                    Time 5
                })
            elseif KeyNotifications then
 MakeNotifi({
                    Title = KeyTitle,
                    Text = KeySuccess,
                    Time = 5
                })
            end
        end        GetKeyLink.MouseButton1Click:Connect(function()
            if Key then
                setclipboard(KeyLink)
                MakeNotifi({
                    Title = KeyTitle,
                    Text = KeyCopyKeyLink,
                    Time = 5
                })
            end
        end)

        repeat task.wait()
        until KeyVerify
        localcale = Create("UIScale", KeyMenu)
        CreateTween(UIScale, "Scale", 0, 0.40, true)
        Key:Destroy()
    end    -- Main Menu Frame
    local Menu = Create("Frame", ScreenGui, {
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        Position = UDim2.new(0.5, -250, 0.5, -135),  -- Centered more visually
        Active = true,
        Draggable = true
    }) Corner(Menu)

    -- TopBar and Button Functions
    local TopBar = Create("Frame", Menu, {
        BackgroundTransparency = 1,
        Size = UDim2.new(1, 0, 0, 25),
        Visible = false
    })

    local ButtonsFrame = Create("Frame", TopBar, {
        Size = UDim2.new(0, 50, 1, -5),  -- Size adjusted for aesthetics
        Position = UDim2.new(1, -10, 0, 2.5),
        AnchorPoint = Vector2.new(1, 0),
        BackgroundTransparency = 1
    })

    local Title = Create("TextLabel", TopBar, {
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 20, 0, 0),
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextXAlignment = "Left",
        Text = title,
        TextSize = 24,  -- Increased Text Size for readability
        BackgroundTransparency = 1
    })

 -- Minimize and Close Buttons
    local Minimize_BTN = Create("TextButton", ButtonsFrame, {
        Text = "-",  -- Minimize button
        TextColor3 = Configs_HUB.Cor_Text,
        Size = UDim2.new(0.5 0, 1, 0),
        BackgroundTransparency 1,
        Font Configs_HUB.Text_Font,
        TextYAlignment = "Bottom",
        TextSize = 25
    })

    IsMinimized = false
    Minimize_BTN.MouseButton1Click:Connect(function()
        Minimize_BTN.Text = not IsMinimized and "+" or "-"
        if IsMinimized then
            IsMinimized = false
            CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.15, false)
        else
            IsMinimized = true
            CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 25), 0.15, true)
        end
    end)

    -- Close Button Functionality
    local Close_Button = Create("TextButton", ButtonsFrame, {
        Text = "×",
        TextYAlignment = "Bottom",
        TextColor3 = Configs_HUB.Cor_Text,
        Size = UDim2.new(0.5, 0, 1, 0),
        AnchorPoint = Vector2.new(1, 0),
        Position = UDim2.new(1, 0, 0, 0),
        BackgroundTransparency = 1,
        Font = Configs_HUB.Text_Font,
        TextSize = 25
    })

    -- Confirmation Dialog on Close
    local function CreateClose()
        IsMinimized = false
        CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.3, false)
        local CloseGui = Create("TextButton", Menu, {
            BackgroundTransparency = 0.5,
            BackgroundColor3 =sUB.Cor_Hub,
            Size = UDim2.new(1, 0, 1, 0),
            AutoButtonColor = false